[gd_resource type="VisualShader" load_steps=5 format=2]

[ext_resource path="res://materials/textures/stone.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeTexture" id=1]

texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=2]

input_name = "uv"

[sub_resource type="VisualShaderNodeScalarConstant" id=3]


[resource]

code = "shader_type spatial;
uniform sampler2D tex_frg_2;


void vertex() {
// Output:0

}

void fragment() {
// Input:5
	vec3 n_out5p0;
	n_out5p0 = vec3(UV,0.0);

// Scalar:6
	float n_out6p0;
	n_out6p0 = 0.000000;

// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	vec4 tex_frg_2_read = textureLod( tex_frg_2 , n_out5p0.xy , n_out6p0 );
	n_out2p0 = tex_frg_2_read.rgb;
	n_out2p1 = tex_frg_2_read.a;

// Output:0
	ALBEDO = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -490, 156 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -40, 200 )
nodes/fragment/5/node = SubResource( 2 )
nodes/fragment/5/position = Vector2( -460, 280 )
nodes/fragment/6/node = SubResource( 3 )
nodes/fragment/6/position = Vector2( -300, 440 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 5, 0, 2, 0, 6, 0, 2, 1 )

