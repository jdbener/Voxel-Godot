[gd_resource type="VisualShader" load_steps=5 format=2]

[sub_resource type="VisualShaderNodeColorConstant" id=1]

constant = Color( 1, 0, 0, 0.66298 )

[sub_resource type="VisualShaderNodeInput" id=2]

output_port_for_preview = 0
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorInterp" id=3]

output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarConstant" id=4]

constant = 0.9

[resource]

code = "shader_type spatial;



void vertex() {
// Output:0

}

void fragment() {
// Input:6
	vec3 n_out6p0;
	n_out6p0 = VERTEX;

// Color:3
	vec3 n_out3p0;
	float n_out3p1;
	n_out3p0 = vec3(1.000000,0.000000,0.000000);
	n_out3p1 = 0.662980;

// Scalar:8
	float n_out8p0;
	n_out8p0 = 0.900000;

// VectorInterp:7
	vec3 n_out7p0;
	n_out7p0 = mix( n_out6p0 , n_out3p0 , vec3(n_out8p0) );

// Output:0
	ALBEDO = n_out7p0;
	ALPHA = n_out3p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -455, 146 )
nodes/fragment/0/position = Vector2( 400, 160 )
nodes/fragment/3/node = SubResource( 1 )
nodes/fragment/3/position = Vector2( -180, 280 )
nodes/fragment/6/node = SubResource( 2 )
nodes/fragment/6/position = Vector2( -560, 200 )
nodes/fragment/7/node = SubResource( 3 )
nodes/fragment/7/position = Vector2( 120, 140 )
nodes/fragment/8/node = SubResource( 4 )
nodes/fragment/8/position = Vector2( -240, 220 )
nodes/fragment/connections = PoolIntArray( 8, 0, 7, 2, 7, 0, 0, 0, 6, 0, 7, 0, 3, 0, 7, 1, 3, 1, 0, 1 )

